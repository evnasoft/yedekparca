generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String     @id @default(cuid())
  name        String
  slug        String     @unique
  description String?
  parentId    String?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  parent      Category?  @relation("SubCategories", fields: [parentId], references: [id])
  children    Category[] @relation("SubCategories")
  products    Product[]
}

model Brand {
  id          String         @id @default(cuid())
  name        String
  slug        String         @unique
  description String?
  logo        String?
  isActive    Boolean        @default(true)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  models      MachineModel[]
  products    Product[]
}

model Product {
  id               String         @id @default(cuid())
  name             String
  slug             String         @unique
  description      String?
  sku              String?        @unique
  partNumber       String?
  oemNumber        String?
  price            Float?
  stock            Int            @default(0)
  specifications   Json?
  images           Json?
  isActive         Boolean        @default(true)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  categoryId       String?
  brandId          String?
  brand            Brand?         @relation(fields: [brandId], references: [id])
  category         Category?      @relation(fields: [categoryId], references: [id])
  compatibleModels MachineModel[] @relation("MachineModelProducts")
  relatedProducts  Product[]      @relation("ProductToProduct")
  relatedTo        Product[]      @relation("ProductToProduct")

  @@index([categoryId])
  @@index([brandId])
}

model MachineModel {
  id        String    @id @default(cuid())
  name      String
  year      Int?
  type      String
  brandId   String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  brand     Brand     @relation(fields: [brandId], references: [id])
  products  Product[] @relation("MachineModelProducts")

  @@unique([name, brandId])
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  role      Role     @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Settings {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
